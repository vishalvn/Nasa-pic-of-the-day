// Generated by Dagger (https://dagger.dev).
package com.vv.nasapod.ui;

import com.squareup.picasso.Picasso;
import com.vv.nasapod.ui.npod.NasaPODViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VideoViewScreen_MembersInjector implements MembersInjector<VideoViewScreen> {
  private final Provider<NasaPODViewModelFactory> nasaAPODViewModelFactoryProvider;

  private final Provider<Picasso> picassoProvider;

  public VideoViewScreen_MembersInjector(
      Provider<NasaPODViewModelFactory> nasaAPODViewModelFactoryProvider,
      Provider<Picasso> picassoProvider) {
    this.nasaAPODViewModelFactoryProvider = nasaAPODViewModelFactoryProvider;
    this.picassoProvider = picassoProvider;
  }

  public static MembersInjector<VideoViewScreen> create(
      Provider<NasaPODViewModelFactory> nasaAPODViewModelFactoryProvider,
      Provider<Picasso> picassoProvider) {
    return new VideoViewScreen_MembersInjector(nasaAPODViewModelFactoryProvider, picassoProvider);}

  @Override
  public void injectMembers(VideoViewScreen instance) {
    injectNasaAPODViewModelFactory(instance, nasaAPODViewModelFactoryProvider.get());
    injectPicasso(instance, picassoProvider.get());
  }

  @InjectedFieldSignature("com.vv.nasapod.ui.VideoViewScreen.nasaAPODViewModelFactory")
  public static void injectNasaAPODViewModelFactory(VideoViewScreen instance,
      NasaPODViewModelFactory nasaAPODViewModelFactory) {
    instance.nasaAPODViewModelFactory = nasaAPODViewModelFactory;
  }

  @InjectedFieldSignature("com.vv.nasapod.ui.VideoViewScreen.picasso")
  public static void injectPicasso(VideoViewScreen instance, Picasso picasso) {
    instance.picasso = picasso;
  }
}
