// Generated by Dagger (https://dagger.dev).
package com.vv.nasapod.ui;

import com.squareup.picasso.Picasso;
import com.vv.nasapod.ui.npod.NasaPODViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PhotoViewScreen_MembersInjector implements MembersInjector<PhotoViewScreen> {
  private final Provider<NasaPODViewModelFactory> nasaPODViewModelFactoryProvider;

  private final Provider<Picasso> picassoProvider;

  public PhotoViewScreen_MembersInjector(
      Provider<NasaPODViewModelFactory> nasaPODViewModelFactoryProvider,
      Provider<Picasso> picassoProvider) {
    this.nasaPODViewModelFactoryProvider = nasaPODViewModelFactoryProvider;
    this.picassoProvider = picassoProvider;
  }

  public static MembersInjector<PhotoViewScreen> create(
      Provider<NasaPODViewModelFactory> nasaPODViewModelFactoryProvider,
      Provider<Picasso> picassoProvider) {
    return new PhotoViewScreen_MembersInjector(nasaPODViewModelFactoryProvider, picassoProvider);}

  @Override
  public void injectMembers(PhotoViewScreen instance) {
    injectNasaPODViewModelFactory(instance, nasaPODViewModelFactoryProvider.get());
    injectPicasso(instance, picassoProvider.get());
  }

  @InjectedFieldSignature("com.vv.nasapod.ui.PhotoViewScreen.nasaPODViewModelFactory")
  public static void injectNasaPODViewModelFactory(PhotoViewScreen instance,
      NasaPODViewModelFactory nasaPODViewModelFactory) {
    instance.nasaPODViewModelFactory = nasaPODViewModelFactory;
  }

  @InjectedFieldSignature("com.vv.nasapod.ui.PhotoViewScreen.picasso")
  public static void injectPicasso(PhotoViewScreen instance, Picasso picasso) {
    instance.picasso = picasso;
  }
}
